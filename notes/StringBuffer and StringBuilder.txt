

//StringBuffer
Java StringBuffer class is used to create 
mutable (modifiable) String objects. 
The StringBuffer class in Java is the same as 
String class except it is mutable i.e. 
it can be changed.

Note: Java StringBuffer class is thread-safe 
i.e. multiple threads cannot access it 
simultaneously. So it is safe and will 
result in an order.

-------------------------
class Append{  
public static void main(String args[]){  
StringBuffer sb=new StringBuffer("Hello ");  
sb.append("Java");//now original string is changed  
System.out.println(sb);//prints Hello Java  
}  
}  
-----------------------------
class Insert{  
public static void main(String args[]){  
StringBuffer sb=new StringBuffer("Hello ");  
sb.insert(1,"Java");//now original string is changed  
System.out.println(sb);//prints HJavaello  
}  
}  
----------------------------------------
class replace{  
public static void main(String args[]){  
StringBuffer sb=new StringBuffer("Hello");  
sb.replace(1,3,"Java");   // replace from 1 to before 3 index
System.out.println(sb);//prints HJavalo  
}  
}  
---------------------------------------
class Delete{  
public static void main(String args[]){  
StringBuffer sb=new StringBuffer("Hello");  
sb.delete(1,3);  // delete from 1 to before 3 index
System.out.println(sb);//prints Hlo  
}  
}  
------------------
class Reverse{  
public static void main(String args[]){  
StringBuffer sb=new StringBuffer("Hello");  
sb.reverse();  
System.out.println(sb);//prints olleH  
}  
}  
------------------------------
Java StringBuilder Class
----------------------------
Java StringBuilder class is used to create 
mutable (modifiable) String. 
The Java StringBuilder class is same as 
StringBuffer class except that it is 
non-synchronized. 

It is available since JDK 1.5.